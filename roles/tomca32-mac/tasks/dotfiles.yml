---
- name: Create dotfiles directories
  file:
    path: "~/{{ item  }}"
    state: directory
    mode: 0755
  loop:
    - .config
    - .config/fish
    - .config/fish/functions
    - .config/helix
    - .config/zellij
    - .config/alacritty
    - .config/alacritty/themes
    - .config/nvim
    - .config/nvim/lua
    - .config/nvim/lua/plugins
    - .config/kitty

- name: Clone Alacritty themes
  shell: cd ~/.config/alacritty/themes; git init; git remote add origin https://github.com/alacritty/alacritty-theme; git pull origin master

- name: neovim plugins
  file:
    src: "{{ item }}"
    path: "~/.config/nvim/lua/plugins/{{ item | regex_search('plugins/(.+)', '\\1') | first}}"
    state: link
  with_fileglob: "{{ ansible_env.PWD }}/roles/tomca32-mac/files/dotfiles/.config/nvim/lua/plugins/*"

- name: neovim lua non-plugins
  file:
    src: "{{ item }}"
    path: "~/.config/nvim/lua/{{ item | regex_search('lua/(.+)', '\\1') | first}}"
    state: link
  with_fileglob: "{{ ansible_env.PWD }}/roles/tomca32-mac/files/dotfiles/.config/nvim/lua/*"

- name: neovim root files
  file:
    src: "{{ item }}"
    path: "~/.config/nvim/{{ item | regex_search('nvim/(.+)', '\\1') | first}}"
    state: link
  with_fileglob: "{{ ansible_env.PWD }}/roles/tomca32-mac/files/dotfiles/.config/nvim/*"

- name: dotfiles links in ~/
  file:
    src: "{{ ansible_env.PWD }}/roles/tomca32-mac/files/dotfiles/{{ item }}"
    path: "~/{{ item }}"
    state: link
    force: yes
  loop:
    - .gitconfig
    - .config/fish/config.fish
    - .config/fish/functions/rvm.fish
    - .config/starship.toml
    - .config/helix/languages.toml
    - .config/helix/config.toml
    - .config/zellij/config.kdl
    - .config/alacritty/alacritty.toml
    - .config/kitty/current-theme.conf
    - .config/kitty/kitty.conf
    - Library/Application Support/Code/User/settings.json
    - Library/Application Support/Code/User/keybindings.json
    - Library/Application Support/nushell/config.nu
    - Library/Application Support/nushell/env.nu

- name: Install VS Code Extensions
  shell: code --install-extension {{ item }}
  loop: "{{ visual_studio_code_extensions }}"
